//                    ___          ___                     ___                                    ___          ___
//        ___        /  /\        /  /\       ___         /  /\        _____                     /  /\        /  /\
//       /__/\      /  /::\      /  /::\     /  /\       /  /::\      /  /::\                   /  /:/_      /  /:/_
//       \  \:\    /  /:/\:\    /  /:/\:\   /  /:/      /  /:/\:\    /  /:/\:\   ___     ___   /  /:/ /\    /  /:/ /\
//        \  \:\  /  /:/~/::\  /  /:/~/:/  /__/::\     /  /:/~/::\  /  /:/~/::\ /__/\   /  /\ /  /:/ /:/_  /  /:/ /::\
//    ___  \__\:\/__/:/ /:/\:\/__/:/ /:/___\__\/\:\__ /__/:/ /:/\:\/__/:/ /:/\:|\  \:\ /  /://__/:/ /:/ /\/__/:/ /:/\:\
//   /__/\ |  |:|\  \:\/:/__\/\  \:\/:::::/   \  \:\/\\  \:\/:/__\/\  \:\/:/~/:/ \  \:\  /:/ \  \:\/:/ /:/\  \:\/:/~/:/
//   \  \:\|  |:| \  \::/      \  \::/~~~~     \__\::/ \  \::/      \  \::/ /:/   \  \:\/:/   \  \::/ /:/  \  \::/ /:/
//    \  \:\__|:|  \  \:\       \  \:\         /__/:/   \  \:\       \  \:\/:/     \  \::/     \  \:\/:/    \__\/ /:/
//     \__\::::/    \  \:\       \  \:\        \__\/     \  \:\       \  \::/       \__\/       \  \::/       /__/:/
//         ~~~~      \__\/        \__\/                   \__\/        \__\/                     \__\/        \__\/

$message-bubble-background-color: rgb(25, 131, 250);
$message-bubble-green-background-color: rgb(81, 198, 38);
$message-bubble-text-color: rgb(255, 255, 255);
$message-bubble-reply-background-color: rgb(229, 229, 234);
$message-bubble-reply-text-color: rgb(2, 2, 2);

$message-bubble-max-width: 18em;
$message-bubble-width: 80%;
$message-bubble-padding: 0.5em 0.75em;
$message-bubble-margin-top: 0.5em;

$message-bubble-extra-info-color: rgb(190, 190, 190);
$message-bubble-extra-info-font-size: 0.8em;
$message-bubble-timestamp-width: 7em;

// Total size with fully rounded corners appears to be
// roughly 34 px, so 1/2 (15px) on each border
$message-bubble-border-radius: #{(17/16)}em;
$message-bubble-tail-width: 0.06*$message-bubble-max-width;

// Tail .svg size-related variables
$message-bubble-tail-default-width: 116.42;
$message-bubble-tail-default-height: 97.35;
$message-bubble-tail-aspect-ratio: ($message-bubble-tail-default-width/$message-bubble-tail-default-height);
$message-bubble-tail-start-point-x: (63.84/$message-bubble-tail-default-width);
$message-bubble-tail-horizontal-offset: (-$message-bubble-tail-width*$message-bubble-tail-start-point-x);


//        ___                    ___                     ___          ___
//       /__/\       ___        /__/|       ___         /__/\        /  /\
//      |  |::\     /  /\      |  |:|      /  /\        \  \:\      /  /:/_
//      |  |:|:\   /  /:/      |  |:|     /  /:/         \  \:\    /  /:/ /\
//    __|__|:|\:\ /__/::\    __|__|:|    /__/::\     _____\__\:\  /  /:/ /::\
//   /__/::::| \:\\__\/\:\__/__/::::\____\__\/\:\__ /__/::::::::\/__/:/ /:/\:\
//   \  \:\~~\__\/   \  \:\/\  ~\~~\::::/   \  \:\/\\  \:\~~\~~\/\  \:\/:/~/:/
//    \  \:\          \__\::/   |~~|:|~~     \__\::/ \  \:\  ~~~  \  \::/ /:/
//     \  \:\         /__/:/    |  |:|       /__/:/   \  \:\       \__\/ /:/
//      \  \:\        \__\/     |  |:|       \__\/     \  \:\        /__/:/
//       \__\/                  |__|/                   \__\/        \__\/

// @MIXIN
// color-message-bubble()
// -----------------------------------------------------------------------------------------

// @SUMMARY
// -----------------------------------------------------------------------------------------
// Does the required declarations to change the color of message bubbles.

// @PARAMETERS
// -----------------------------------------------------------------------------------------
// $color:       The background color you'd like for the message bubble.
// $parent:      A parent element that must be present for the message bubble to take on
//               this background color (optional).

@mixin color-message-bubble($color, $parent: NULL) {
    $selector: ".message-bubble";
    @if $parent != NULL {
        $selector: "#{unquote($parent)} .message-bubble";
    }

    #{unquote($selector)} {
        background-color: $color;

        .message-bubble-whale-tail path {
            fill: $color;
        }
    }
}

$basic-spring-x1:       0.370; // first point, x-coordinate
$basic-spring-y1:       1.650; // first point, y-coordinate
$basic-spring-x2:       0.305; // second point, x-coordinate
$basic-spring-y2:       0.855; // second point, y-coordinate

// Construction of the actual cubic-bezier function. Use this to define the
// transition-timing-function property in your Sass code.

$basic-spring:          cubic-bezier(#{$basic-spring-x1},
                                     #{$basic-spring-y1},
                                     #{$basic-spring-x2},
                                     #{$basic-spring-y2});

.message-bubble.return {
    transition: transform 0.4s ease;

    .message-bubble-timestamp { transition: opacity 0.4s ease, transform 0.4s ease; }
}



.message-bubble-container {
    &:after {
        content: '';
        display: block;
        clear: both;
    }
    border: 1px solid black;
    padding: 1em;
    overflow: hidden;

    .message-bubble { float: right; clear: both; }
    .message-bubble.reply { float: left; }
}


.message-bubble {
    background-color: $message-bubble-background-color;
    max-width: calc(100% - #{$message-bubble-timestamp-width});
    position: relative;
    border-radius: $message-bubble-border-radius;
    padding: $message-bubble-padding;
    color: $message-bubble-text-color;
    line-height: 1.3;
    font-family: Helvetica;
    margin-top: $message-bubble-margin-top;

    &.reply {
        background-color: $message-bubble-reply-background-color;
        color: $message-bubble-reply-text-color;

        .message-bubble-whale-tail {
            right: auto;
            left: $message-bubble-tail-horizontal-offset;
            transform: scaleX(-1);

            path {
                fill: $message-bubble-reply-background-color;
            }
        }
    }

    &.no-tail {
        .message-bubble-whale-tail { display: none; }
    }

    &.reply + .message-bubble.reply {
        margin-top: ($message-bubble-margin-top/2);
    }

    &:not(.reply) + .message-bubble:not(.reply) {
        margin-top: ($message-bubble-margin-top/2);
    }



    .message-bubble-inner {
        max-width: $message-bubble-max-width;
    }

    p {
        &:first-of-type { margin-top: 0; }
        &:last-of-type { margin-bottom: 0; }
    }

    .message-bubble-whale-tail {
        position: absolute;
        right: $message-bubble-tail-horizontal-offset;
        bottom: 0;
        width: $message-bubble-tail-width;
        height: $message-bubble-tail-width / $message-bubble-tail-aspect-ratio;

        path {
            fill: $message-bubble-background-color;
        }
    }

    .message-bubble-timestamp {
        position: absolute;
        left: 100%; top: 50%;
        transform: translateY(-50%);
        color: $message-bubble-extra-info-color;
        opacity: 0;
        display: block;
        font-size: $message-bubble-extra-info-font-size;
        width: $message-bubble-timestamp-width;
        text-align: center;
    }
}

.message-bubble-heading {
    clear: both;
    font-family: Helvetica;
    text-align: center;
    margin: 0;
    padding: 2em 0 0;
    font-size: $message-bubble-extra-info-font-size;
    color: $message-bubble-extra-info-color;
    font-weight: normal;

    .message-bubble-date {
        font-weight: bold;
        color: darken($message-bubble-extra-info-color, 10%);
    }
}